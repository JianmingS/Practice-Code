#
# @lc app=leetcode.cn id=1227 lang=python3
#
# [1227] 飞机座位分配概率
#
# https://leetcode-cn.com/problems/airplane-seat-assignment-probability/description/
#
# algorithms
# Medium (63.84%)
# Likes:    47
# Dislikes: 0
# Total Accepted:    4.8K
# Total Submissions: 7.4K
# Testcase Example:  '1'
#
# 有 n 位乘客即将登机，飞机正好有 n 个座位。第一位乘客的票丢了，他随便选了一个座位坐下。
#
# 剩下的乘客将会：
#
#
#
# 如果他们自己的座位还空着，就坐到自己的座位上，
#
# 当他们自己的座位被占用时，随机选择其他座位
#
#
# 第 n 位乘客坐在自己的座位上的概率是多少？
#
#
#
# 示例 1：
#
#
# 输入：n = 1
# 输出：1.00000
# 解释：第一个人只会坐在自己的位置上。
#
# 示例 2：
#
#
# 输入: n = 2
# 输出: 0.50000
# 解释：在第一个人选好座位坐下后，第二个人坐在自己的座位上的概率是 0.5。
#
#
#
#
# 提示：
#
#
# 1 <= n <= 10^5
#
#
#

# @lc code=start


class Solution:
    def nthPersonGetsNthSeat(self, n: int) -> float:
        '''
        问题：有n位乘客即将登机，第1位乘客票丢了，第n位乘客坐在自己的座位上的概率是多少？

        假定乘客按照 第1位～第n位 依次登机，存在以下n种情况：
        1、第1位乘客坐在自己的位置，后续乘客都可以找到自己的位置，第n位乘客坐在自己位置的概率为：(1/n)*1；

        2、第1位乘客坐在第2位乘客的位置，第n位乘客坐在自己位置的概率为：(1/n)*(第2～n位乘客登机，第n位乘客坐在自己的位置的概率)；
            第2～n位乘客登机，第n位乘客坐在自己的位置的概率 <= >  有(n-1)位乘客即将登机，第1位乘客票丢了，第(n-1)位乘客坐在自己的座位上的概率
            原因是：
                第2位乘客和第1位乘客情况一样，会随机坐，且只有一个位置（第1位乘客的位置）不会影响后续乘客的位置
                不过此时对于第2位乘客可选择座位数是(n-1)

        3、第1位乘客坐在第3位乘客的位置，第2位乘客会坐到自己的位置，第n位乘客坐在自己位置的概率为：(1/n)*(第3～n位乘客登机，第n位乘客坐在自己的位置的概率)；
            第3～n位乘客登机，第n位乘客坐在自己的位置的概率 <= >  有(n-2)位乘客即将登机，第1位乘客票丢了，第(n-2)位乘客坐在自己的座位上的概率

        ......

        n-1、第1位乘客坐在第(n-1)位乘客的位置，第2~(n-2)位乘客会坐到自己的位置，第n位乘客坐在自己位置的概率为：(1/n)*(第(n-1)～n位乘客登机，第n位乘客坐在自己的位置的概率)；
            第(n-1)～n位乘客登机，第n位乘客坐在自己的位置的概率 <= >  有2位乘客即将登机，第1位乘客票丢了，第2位乘客坐在自己的座位上的概率

        n、第1位乘客坐在第n位乘客的位置，第n位乘客坐在自己位置的概率为：(1/n)*0。

        令 p[n] 表示：有n位乘客即将登机，第1位乘客票丢了，第n位乘客坐在自己的座位上的概率
        那么：p[n] = (n/1) * (1 + p[n-1] + p[n-2] + ... + p[2] + 0)
        '''

        p = [0] * (n + 10)
        p[1] = 1
        p[2] = 0.5

        sum_p = 1.5
        for i in range(3, n+1, 1):
            p[i] = (sum_p)/i
            sum_p += p[i]

        return p[n]

# @lc code=end
